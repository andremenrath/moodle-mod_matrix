# https://docs.gitlab.com/ee/ci/yaml/
# https://docs.gitlab.com/ee/user/packages/generic_packages/index.html#publish-a-package-file
# https://docs.gitlab.com/ee/user/project/releases/#create-a-release-by-using-a-cicd-job

stages:
  - "build"
  - "release"

variables:
  MOD_MATRIX_ZIP_URL: "${CI_API_V4_URL}/projects/${CI_PROJECT_ID}/packages/generic/mod_matrix.zip/${CI_COMMIT_TAG}/mod_matrix._zip"

archive:
  stage: "build"

  tags:
    - "docker-large"

  image: "gitlab-registry.matrix.org/new-vector/moodle-mod_matrix/php-dev:latest"

  artifacts:
    name: "mod_matrix.zip"
    paths:
      - "mod_matrix.zip"

  before_script:
    - "composer validate --ansi --strict"
    - "composer install --ansi --no-interaction --no-dev --no-progress"

  script:
    - "zip -FSr mod_matrix.zip . -x \".git/*\" \".data/*\" \".docker/*\" \".gitlab/*\" \"test/*\" .editorconfig .gitignore .gitlab-ci.yml .php-cs-fixer.php Makefile psalm.xml psalm-baseline.xml README.md"

coding-standards:
  stage: "build"

  tags:
    - "docker-large"

  image: "gitlab-registry.matrix.org/new-vector/moodle-mod_matrix/php-dev:latest"

  before_script:
    - "composer validate --ansi --strict"
    - "composer install --ansi --no-interaction --no-progress"
    - "mkdir -p .build/php-cs-fixer"

  script:
    - "composer normalize --ansi --dry-run"
    - "vendor/bin/php-cs-fixer fix --ansi --config=.php-cs-fixer.php --diff --dry-run --verbose"

package:
  stage: "release"

  image: "curlimages/curl:latest"

  only:
    - "tags"

  dependencies:
    - "archive"

  needs:
    - "archive"

  script:
    - "curl --header \"JOB-TOKEN: ${CI_JOB_TOKEN}\" --upload-file mod_matrix.zip ${MOD_MATRIX_ZIP_URL}"

  tags:
    - "docker-large"

release:
  stage: "release"

  image: "registry.gitlab.com/gitlab-org/release-cli:latest"

  only:
    - "tags"

  needs:
    - job: "package"

  release:
    assets:
      links:
        - name: "mod_matrix.zip"
          url: "${MOD_MATRIX_ZIP_URL}"
    description: "${CI_COMMIT_TAG}"
    milestones:
      - "${CI_COMMIT_TAG}"
    name: "${CI_COMMIT_TAG}"
    ref: "${CI_COMMIT_TAG}"
    tag_name: "${CI_COMMIT_TAG}"

  script:
    - "echo \"Creating release for $CI_COMMIT_TAG\""

static-code-analysis:
  stage: "build"

  tags:
    - "docker-large"

  image: "gitlab-registry.matrix.org/new-vector/moodle-mod_matrix/php-dev:latest"

  before_script:
    - "composer validate --ansi --strict"
    - "composer install --ansi --no-interaction --no-progress"
    - "mkdir -p .build/psalm"

  script:
    - "vendor/bin/psalm --config=psalm.xml --show-info=false --stats"

tests:
  stage: "build"

  tags:
    - "docker-large"

  image: "gitlab-registry.matrix.org/new-vector/moodle-mod_matrix/php-dev:latest"

  artifacts:
    reports:
      cobertura: ".build/phpunit/cobertura.xml"
      junit: ".build/phpunit/junit.xml"
    when: "always"

  before_script:
    - "composer validate --ansi --strict"
    - "composer install --ansi --no-interaction --no-progress"
    - "mkdir -p .build/phpunit"

  script:
    - "XDEBUG_MODE=coverage vendor/bin/phpunit --configuration=test/Unit/phpunit.xml --colors=never --coverage-cobertura=.build/phpunit/cobertura.xml --coverage-text --log-junit=.build/phpunit/junit.xml"
